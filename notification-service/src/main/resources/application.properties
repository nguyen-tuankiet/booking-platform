server.port=8084
spring.application.name=notification-service

# ========== Eureka ==========
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true

# ========== Kafka ==========
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.booking.*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# ========== MongoDB ==========
spring.data.mongodb.uri=mongodb+srv://tuankietcoder2211:tuankietcoder2211@notification-service.i6okeep.mongodb.net/?retryWrites=true&w=majority&appName=notification-service
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.data.mongodb.database=notification-service


# ========== Redis ==========
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms

# ========== Email Configuration ==========
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=tuankietcoder2211@gmail.com
spring.mail.password=rtxi lzaw ijel vebx
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# ========== Rate Limiting ==========
notification.rate-limit.email.max-per-minute=10
notification.rate-limit.sms.max-per-minute=5
notification.rate-limit.push.max-per-minute=20

# ========== Templates ==========
notification.templates.path=classpath:/templates/

# ========== Actuator ==========
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# ========== Logging ==========
logging.level.com.booking.notification_service=DEBUG
logging.level.org.springframework.kafka=INFO

# SMS Configuration
sms.mock-mode= true  

# Twilio Configuration
twilio.account-sid= ${TWILIO_ACCOUNT_SID}
twilio.auth-token= ${TWILIO_AUTH_TOKEN}
twilio.from-number= ${TWILIO_FROM_NUMBER}